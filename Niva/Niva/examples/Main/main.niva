//type Assert
//constructor Assert that::Any equals::Any -> Unit = [
//  that != equals => [
//    Error throwWithMessage: "Assertion failed: $that != $equals"
//  ]
//]
//Assert that: "sas" equals: "sas"

//fun <T> Node<T>.addAll(): Int {
//    val v = this.value
//    val l = left
//    val r = right
//    when (v) {
//        is Int -> {
//            val leftSum = left.unpackOr({it.addAll()}, 0)
//            val rightSum = if (r != null) r.addAll() else 0
//            return v + leftSum + rightSum
//        }
//        else -> return 0
//    }
//
//}


T d -> T = [
  receiver = Compiler getName: 0
  "$receiver = $this" echo
  ^ this
]
1 d 2 d

{1 2 3 4 5 6}
    map: [it inc] |>
    d |>
    filter: [it % 2 == 0] |>
    d |>
    map: [it toString + "!"] |>
    d |>
    echo

