//type Assert
//constructor Assert that::Any equals::Any -> Unit = [
//  that != equals => [
//    Error throwWithMessage: "Assertion failed: $that != $equals"
//  ]
//]
//Assert that: "sas" equals: "sas"

//fun <T> Node<T>.addAll(): Int {
//    val v = this.value
//    val l = left
//    val r = right
//    when (v) {
//        is Int -> {
//            val leftSum = left.unpackOr({it.addAll()}, 0)
//            val rightSum = if (r != null) r.addAll() else 0
//            return v + leftSum + rightSum
//        }
//        else -> return 0
//    }
//
//}




//type Person name: String
//Person func::Person.[Int, String -> Int] = 1 //func this: this x: 1 y: "Sas"
////Person func::Person.[Int, String -> Int] =  this func x: 1 y: "Sas"
////Person func::Person.[Int, String -> Int] =  this Int: 1 String: "Sas"
////Person func::Person.[x::Int, y::String -> Int] = this x: 1 y: "Sas"
//
//func = [this::Person, x::Int, y::String -> x inc inc inc]
//func = Person[x::Int, y::String -> x inc inc inc]
//
//x = Person name: "Alice"
//x func: func



///////
//input =
//"""1abc2
//pqr3stu8vwx
//a1b2c3d4e5f
//treb7uchet""" split: "\n"
//
//input echo
//
//sum2 = input sumOf: [s ->
//    d = s filter: ['0'..'9' contains: it]
////> 12, 38, 12345, 7
//    >4 d
//    first = d first
//    last = d last
//    "$first$last" toInt
//]
////> 142
//>sum2
//
//digits = {"", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine"}
//sum = input sumOf: [ s ->
//    sb = StringBuilder new
//    s indices forEachIndexed: [i, it ->
//        q = s at: i
////> h, e, t
//        >3 q
//        '0'..'9' contains: q => [
//            sb append: q
//        ] |=> [
//            ss = s substring: i
////> het, et, t
//            >3 ss
//            1..9 forEach: [j ->
//                ss startsWith: (digits at: j) =>
//                    sb append: ('0' addInt: j)
//
//            ]
//        ]
//    ]
//    first = sb first
//    last = sb last
//    "$first$last" toInt
//]
////> 142
//>sum
///////////





type Person 
  name: String 
  age: Int
p = 
  Person 
    name: "Alice"
    age: 32

1 aasdasd!