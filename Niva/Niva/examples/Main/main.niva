type Pair
  x: T
  y: G

Pair(MutableList::T, MutableList::T) forEach: block::[T, T -> Unit] = [
  x count < y count
    ifTrue: [
        x forEachIndexed: [ i, first ->
          second = y at: i
          block T: first T: second
        ]
    ]
    ifFalse: [
      y forEachIndexed: [ i, first ->
        second = x at: i
        block T: first T: second
      ]
    ]
]

first = {1 2 3 4}
second = {5 6 7}

pair = Pair x: first y: second

pair forEach: [a, b ->
  "$a + $b = ${a + b}" echo
]

x = '\Ð¹0000'
//MutableList::T forEachBreak::[T -> Boolean] -> Unit = [
//  this forEach: [
//    forEachBreak T: it |> not => ^
//  ]
//]
//
//{1 2 3} forEachBreak: [
//  it echo
//  false
//]
