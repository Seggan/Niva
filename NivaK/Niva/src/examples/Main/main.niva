//1 to: 3 do: [ it echo ]
//3 downTo: 1 do: [ it echo ]
//
//
//mut x = 10
//"whileTrue" echo
//[x > 0] whileTrue: [
//  x echo
//  x <- x dec
//]
//"whileFalse" echo
//[x == 5] whileFalse: [
//  x echo
//  x <- x inc
//]



Int fizzbuzz -> String =
| (this % (3 * 5)) == 0 => "FizzBuzz"
| (this % 3) == 0 => "Fizz"
| (this % 5) == 0 => "Buzz"
|=> this toString

30 fizzbuzz echo
"----" echo

Int fizzbuzzTo: x::Int = this to: x do: [
  it fizzbuzz echo
]

1 fizzbuzzTo: 100


//union Result =
//    | Ok value: T
//    | Err err: G
//option = Ok value: 42
//




//Option unwrap -> T = |this
//| Some => this x
//| None => Error throwWithMessage: "No value"
//
//optionInt = Some x: 42
//optionInt unwrap echo
//
//optionStr = Some x: "sas"
//optionStr unwrap echo


//union Option =
//    | Some x: T
//    | None
//
//type Node data: T prev: Option::Node::T
